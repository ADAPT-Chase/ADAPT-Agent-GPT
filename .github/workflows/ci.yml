name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
    
    - name: Install dependencies
      run: |
        cd Projects/ADAPT-Agent-GPT/server
        npm ci
    
    - name: Run linter
      run: |
        cd Projects/ADAPT-Agent-GPT/server
        npm run lint
    
    - name: Run tests
      run: |
        cd Projects/ADAPT-Agent-GPT/server
        npm test
      env:
        CI: true
        NODE_ENV: test
        JWT_SECRET: test_secret
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        GCP_PROJECT_ID: test-project-id

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
    
    - name: Install dependencies
      run: |
        cd Projects/ADAPT-Agent-GPT/server
        npm ci
    
    - name: Build
      run: |
        cd Projects/ADAPT-Agent-GPT/server
        npm run build --if-present